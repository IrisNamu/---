// [통계] 월별 수입 통계
	public int sum_pay(String month) {
		ArrayList<PayVo> list = new ArrayList<PayVo>();
		try {
			// 연결
			connDB();
			// SQL 문장 전송
			String sql = "SELECT sum(PAYMENT_AMOUNT)" + "FROM PAYMENT p" + " WHERE PAYMENT_DATE like '%" + month + "%'";
			System.out.println(sql);
			rs = stmt.executeQuery(sql);
			rs.next();
			rs.getString(1);
			System.out.println(rs.getString(1));
			return rs.getInt(1); //쿼리문 결과값을 반환해주면 간단하다.

		} catch (Exception ex) {
			System.out.println(ex.getMessage());
			ex.getStackTrace();
		} finally {
			dbClose();
		}
		return 0;
	}
  
  
  	// 월별 수입 통계
		String[] header = new String[] { "년/월", "1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월" };

		DecimalFormat decFormat = new DecimalFormat("###,###,###");
		int January22 = new PayDAO().sum_pay("2022-1");
		int February22 = new PayDAO().sum_pay("2022-2");
		int March22 = new PayDAO().sum_pay("2022-3");
		int April22 = new PayDAO().sum_pay("2022-4");
		int May22 = new PayDAO().sum_pay("2022-5");
		int June22 = new PayDAO().sum_pay("2022-6");
		int July22 = new PayDAO().sum_pay("2022-7");
		int August22 = new PayDAO().sum_pay("2022-8");
		int Setember22 = new PayDAO().sum_pay("2022-9");
		int October22 = new PayDAO().sum_pay("2022-10");
		int November22 = new PayDAO().sum_pay("2022-11");
		int December22 = new PayDAO().sum_pay("2022-12");

		String[][] data = new String[1][13];
		
		data[0][0] = "2022년";
		data[0][1] = decFormat.format(January22) + "원";
		data[0][2] = decFormat.format(February22) + "원";
		data[0][3] = decFormat.format(March22) + "원";
		data[0][4] = decFormat.format(April22) + "원";
		data[0][5] = decFormat.format(May22) + "원";
		data[0][6] = decFormat.format(June22) + "원";
		data[0][7] = decFormat.format(July22) + "원";
		data[0][8] = decFormat.format(August22) + "원";
		data[0][9] = decFormat.format(Setember22) + "원";
		data[0][10] = decFormat.format(October22) + "원";
		data[0][11] = decFormat.format(November22) + "원";
		data[0][12] = decFormat.format(December22) + "원";

		table_Income_1 = new JTable();
		table_Income_1.setEnabled(false);
		table_Income_1.setFont(new Font("배달의민족 주아", Font.PLAIN, 16));
		table_Income_1.repaint();
		scrollPane_Income.setViewportView(table_Income_1);
		table_Income_1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		table_Income_1.setModel(new DefaultTableModel(data, header));
		table_Income_1.getTableHeader().setFont(new Font("배달의민족 주아", Font.PLAIN, 17));

		// 테이블 높이 넓이 조정해주기
		table_Income_1.setRowHeight(35);
		table_Income_1.getTableHeader().setReorderingAllowed(false);

		DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer(); // 디폴트테이블셀렌더러를 생성
		dtcr.setHorizontalAlignment(SwingConstants.CENTER); // 렌더러의 가로정렬을 CENTER로

		TableColumnModel tcm = table_Income_1.getColumnModel(); // 정렬할 테이블의 컬럼모델을 가져옴

		// 전체 열에 지정
		for (int k = 0; k < tcm.getColumnCount(); k++) {
			tcm.getColumn(k).setCellRenderer(dtcr);
			// 컬럼모델에서 컬럼의 갯수만큼 컬럼을 가져와 for문을 이용하여
			// 각각의 셀렌더러를 아까 생성한 dtcr에 set해줌
		}
  
  
